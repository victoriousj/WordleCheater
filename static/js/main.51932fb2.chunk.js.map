{"version":3,"sources":["LetterButton.js","UnknownLetter.js","helper.js","App.js","serviceWorker.js","index.js"],"names":["LetterButton","props","letter","active","React","useState","isActive","setIsActive","className","onClick","toggleLetter","UnknownLetter","activePositions","setActivePositions","setActive","index","positions","indexOf","filter","x","setUnknownLetters","style","marginBottom","marginRight","textTransform","width","display","dict","require","dictionary","main","state","letters","excludedLetters","unknownLetters","results","length","word","wordArr","split","i","includes","some","key","value","Object","entries","alphabet","App","addGuess","setState","onInput","event","target","nextSibling","focus","previousSibling","splice","push","showCheatText","e","innerText","hideCheatText","reduce","a","b","letterButtons","map","href","this","border","padding","marginTop","borderRadius","fontSize","join","onMouseOver","onMouseLeave","type","maxLength","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51932fb2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction LetterButton(props) {\r\n  const { letter, active } = props;\r\n  const [isActive, setIsActive] = React.useState(active);\r\n\r\n  function setActive() {\r\n    setIsActive(!isActive);\r\n    props.toggleLetter(letter);\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <button\r\n        className={`letter ${isActive ? \"active\" : \"\"}`}\r\n        onClick={setActive}\r\n      >\r\n        {letter}\r\n      </button>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default LetterButton;\r\n","import React from \"react\";\r\n\r\nfunction UnknownLetter(props) {\r\n  const { letter } = props;\r\n  const [activePositions, setActivePositions] = React.useState([]);\r\n\r\n  function setActive(index) {\r\n    var positions = activePositions;\r\n    if (positions.indexOf(index) >= 0) {\r\n      positions = positions.filter((x) => x !== index);\r\n    } else {\r\n      positions = [...positions, index];\r\n    }\r\n    setActivePositions(positions);\r\n    props.setUnknownLetters(letter, positions);\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"2px\" }}>\r\n      <span\r\n        style={{\r\n          marginRight: \"10px\",\r\n          textTransform: \"uppercase\",\r\n          width: \"30px\",\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        {letter}\r\n      </span>\r\n      <button\r\n        className={`unkown-letter letter ${\r\n          activePositions.indexOf(0) >= 0 ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setActive(0)}\r\n      >\r\n        {1}\r\n      </button>\r\n      <button\r\n        className={`unkown-letter letter ${\r\n          activePositions.indexOf(1) >= 0 ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setActive(1)}\r\n      >\r\n        {2}\r\n      </button>\r\n      <button\r\n        className={`unkown-letter letter ${\r\n          activePositions.indexOf(2) >= 0 ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setActive(2)}\r\n      >\r\n        {3}\r\n      </button>\r\n      <button\r\n        className={`unkown-letter letter ${\r\n          activePositions.indexOf(3) >= 0 ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setActive(3)}\r\n      >\r\n        {4}\r\n      </button>\r\n      <button\r\n        className={`unkown-letter letter ${\r\n          activePositions.indexOf(4) >= 0 ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setActive(4)}\r\n      >\r\n        {5}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UnknownLetter;\r\n","const dictionary = require(\"./dictionary.json\");\r\nconst dict = dictionary.dictionary;\r\n\r\nfunction main(state) {\r\n  const { letters, excludedLetters, unknownLetters } = state;\r\n\r\n  let results = dict;\r\n\r\n  if (excludedLetters.length) {\r\n    results = results.filter((word) => {\r\n      var wordArr = word.split(\"\");\r\n      for (let i = 0; i < excludedLetters.length; i++) {\r\n        if (wordArr.includes(excludedLetters[i])) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  if (letters.some((x) => x !== \"\")) {\r\n    results = results.filter((word) => {\r\n      for (let i = 0; i <= 4; i++) {\r\n        if (letters[i] !== \"\") {\r\n          if (letters[i] !== word[i]) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  for (const [key, value] of Object.entries(unknownLetters)) {\r\n    if (value.length > 0) {\r\n      results = results.filter((word) => {\r\n        if (!word.split(\"\").includes(key)) {\r\n          return false;\r\n        }\r\n        for (let i = 0; i <= value.length; i++) {\r\n          if (word[value[i]] === key) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n  }\r\n  if (results.length === dict.length) {\r\n    return [];\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nexport default main;\r\n","import React from \"react\";\r\n\r\nimport LetterButton from \"./LetterButton\";\r\nimport UnknownLetter from \"./UnknownLetter\";\r\n\r\nimport main from \"./helper\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [\"\", \"\", \"\", \"\", \"\"],\r\n      excludedLetters: [],\r\n      results: \"\",\r\n      unknownLetters: alphabet\r\n        .split(\"\")\r\n        .reduce((a, b) => ({ ...a, [b]: [] }), {}),\r\n    };\r\n  }\r\n\r\n  addGuess = () => {\r\n    var results = main(this.state);\r\n    this.setState({ ...this.state, results });\r\n  };\r\n\r\n  onInput = (index, event) => {\r\n    if (event.target.value) {\r\n      if (event.target.nextSibling) {\r\n        event.target.nextSibling.focus();\r\n      }\r\n    } else {\r\n      if (event.target.previousSibling) {\r\n        event.target.previousSibling.focus();\r\n      }\r\n    }\r\n\r\n    var letters = this.state.letters;\r\n    letters[index] = event.target.value;\r\n    this.setState({ ...this.state, letters });\r\n  };\r\n\r\n  toggleLetter = (x) => {\r\n    var excludedLetters = this.state.excludedLetters;\r\n    if (excludedLetters.includes(x)) {\r\n      excludedLetters.splice(excludedLetters.indexOf(x), 1);\r\n    } else {\r\n      excludedLetters.push(x);\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      excludedLetters,\r\n    });\r\n  };\r\n\r\n  showCheatText = (e) => {\r\n    e.target.innerText = \"CHEAT\";\r\n  };\r\n\r\n  hideCheatText = (e) => {\r\n    e.target.innerText = \"HELP!\";\r\n  };\r\n\r\n  setUnknownLetters = (letter, positions) => {\r\n    let { unknownLetters } = this.state;\r\n    unknownLetters[letter] = positions;\r\n    this.setState({\r\n      ...this.state,\r\n      unknownLetters,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const letterButtons = alphabet\r\n      .split(\"\")\r\n      .map((x) => (\r\n        <LetterButton\r\n          letter={x}\r\n          active={false}\r\n          toggleLetter={this.toggleLetter}\r\n          key={`LetterButton-${x}`}\r\n        ></LetterButton>\r\n      ));\r\n\r\n    const unknownLetters = alphabet\r\n      .split(\"\")\r\n      .map((x) => (\r\n        <UnknownLetter\r\n          letter={x}\r\n          active={false}\r\n          toggleLetter={this.toggleLetter}\r\n          key={`LetterButton-${x}`}\r\n          setUnknownLetters={this.setUnknownLetters}\r\n        ></UnknownLetter>\r\n      ));\r\n\r\n    return (\r\n      <div style={{ marginBottom: \"50px\" }}>\r\n        <p className=\"title\">Wordle \"Helper\"</p>\r\n        <a href=\"https://github.com/victoriousj/\">\r\n          <code style={{ textTransform: \"lowercase\" }}>\r\n            by victor d johnson\r\n          </code>\r\n        </a>\r\n        {this.state.results !== \"\" && (\r\n          <div\r\n            style={{\r\n              border: \"1px solid white\",\r\n              padding: \"10px 20px\",\r\n              marginTop: \"20px\",\r\n              borderRadius: \"5px\",\r\n            }}\r\n          >\r\n            <div style={{ fontSize: \"2em\" }}>RESULTS</div>\r\n            <div\r\n              style={{ marginTop: \"20px\" }}\r\n              className={`${\r\n                this.state.results.length === 1 ? \"answer\" : \"\"\r\n              } results`}\r\n            >\r\n              {this.state.results.length > 0\r\n                ? this.state.results.join(\", \")\r\n                : \"NO RESULTS\"}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <button\r\n            className=\"submit\"\r\n            onClick={this.addGuess}\r\n            onMouseOver={this.showCheatText}\r\n            onMouseLeave={this.hideCheatText}\r\n          >\r\n            HELP!\r\n          </button>\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            letters you know their placement\r\n          </div>\r\n          <input\r\n            onInput={(e) => this.onInput(0, e)}\r\n            type=\"text\"\r\n            maxLength={1}\r\n          />\r\n          <input\r\n            onInput={(e) => this.onInput(1, e)}\r\n            type=\"text\"\r\n            maxLength={1}\r\n          />\r\n          <input\r\n            onInput={(e) => this.onInput(2, e)}\r\n            type=\"text\"\r\n            maxLength={1}\r\n          />\r\n          <input\r\n            onInput={(e) => this.onInput(3, e)}\r\n            type=\"text\"\r\n            maxLength={1}\r\n          />\r\n          <input\r\n            onInput={(e) => this.onInput(4, e)}\r\n            type=\"text\"\r\n            maxLength={1}\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            letters that are not included\r\n          </div>\r\n\r\n          {letterButtons}\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            letters with unknown positions - check where letters are NOT located\r\n          </div>\r\n          {unknownLetters}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}