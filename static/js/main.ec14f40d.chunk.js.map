{"version":3,"sources":["LetterButton.js","helper.js","UnknownLetter.js","App.js","serviceWorker.js","index.js"],"names":["LetterButton","props","letter","active","React","useState","isActive","setIsActive","className","onClick","toggleLetter","dict","require","dictionary","main","state","letters","excludedLetters","unknownLetters","results","length","filter","word","wordArr","split","i","includes","some","x","key","value","Object","entries","UnknownLetter","activePositions","setActivePositions","setActive","index","positions","indexOf","setUnknownLetters","style","marginBottom","marginRight","textTransform","width","display","alphabet","App","addGuess","setState","keyUp","event","target","previousSibling","focus","nextSibling","keyCode","keyDown","nativeEvent","console","log","splice","push","showCheatText","e","innerText","hideCheatText","reduce","a","b","letterButtons","map","href","marginTop","this","onMouseOver","onMouseLeave","onKeyUp","onKeyDown","type","maxLength","pattern","border","padding","borderRadius","fontSize","join","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec14f40d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction LetterButton(props) {\r\n  const { letter, active } = props;\r\n  const [isActive, setIsActive] = React.useState(active);\r\n\r\n  function setActive() {\r\n    setIsActive(!isActive);\r\n    props.toggleLetter(letter);\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <button\r\n        className={`letter ${isActive ? \"active\" : \"\"}`}\r\n        onClick={setActive}\r\n      >\r\n        {letter}\r\n      </button>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default LetterButton;\r\n","const dictionary = require(\"./dictionary.json\");\r\nconst dict = dictionary.dictionary;\r\n\r\nfunction main(state) {\r\n  const { letters, excludedLetters, unknownLetters } = state;\r\n\r\n  let results = dict;\r\n\r\n  if (excludedLetters.length) {\r\n    results = results.filter((word) => {\r\n      var wordArr = word.split(\"\");\r\n      for (let i = 0; i < excludedLetters.length; i++) {\r\n        if (wordArr.includes(excludedLetters[i])) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  if (letters.some((x) => x !== \"\")) {\r\n    results = results.filter((word) => {\r\n      for (let i = 0; i <= 4; i++) {\r\n        if (letters[i] !== \"\") {\r\n          if (letters[i] !== word[i]) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  for (const [key, value] of Object.entries(unknownLetters)) {\r\n    if (value.length > 0) {\r\n      results = results.filter((word) => {\r\n        if (!word.split(\"\").includes(key)) {\r\n          return false;\r\n        }\r\n        for (let i = 0; i <= value.length; i++) {\r\n          if (word[value[i]] === key) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n  }\r\n  if (results.length === dict.length) {\r\n    return [];\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nexport default main;\r\n","import React from \"react\";\r\n\r\nfunction UnknownLetter(props) {\r\n  const { letter } = props;\r\n  const [activePositions, setActivePositions] = React.useState([]);\r\n\r\n  function setActive(index) {\r\n    var positions = activePositions;\r\n    if (positions.indexOf(index) >= 0) {\r\n      positions = positions.filter((x) => x !== index);\r\n    } else {\r\n      positions = [...positions, index];\r\n    }\r\n    setActivePositions(positions);\r\n    props.setUnknownLetters(letter, positions);\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"2px\" }}>\r\n      <span\r\n        style={{\r\n          marginRight: \"10px\",\r\n          textTransform: \"uppercase\",\r\n          width: \"30px\",\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        {letter}\r\n      </span>\r\n      <button\r\n        className={`unkown-letter letter ${\r\n          activePositions.indexOf(0) >= 0 ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setActive(0)}\r\n      >\r\n        {1}\r\n      </button>\r\n      <button\r\n        className={`unkown-letter letter ${\r\n          activePositions.indexOf(1) >= 0 ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setActive(1)}\r\n      >\r\n        {2}\r\n      </button>\r\n      <button\r\n        className={`unkown-letter letter ${\r\n          activePositions.indexOf(2) >= 0 ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setActive(2)}\r\n      >\r\n        {3}\r\n      </button>\r\n      <button\r\n        className={`unkown-letter letter ${\r\n          activePositions.indexOf(3) >= 0 ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setActive(3)}\r\n      >\r\n        {4}\r\n      </button>\r\n      <button\r\n        className={`unkown-letter letter ${\r\n          activePositions.indexOf(4) >= 0 ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setActive(4)}\r\n      >\r\n        {5}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UnknownLetter;\r\n","import React from \"react\";\r\n\r\nimport LetterButton from \"./LetterButton\";\r\nimport main from \"./helper\";\r\n\r\nimport \"./App.css\";\r\nimport UnknownLetter from \"./UnknownLetter\";\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      letters: [\"\", \"\", \"\", \"\", \"\"],\r\n      excludedLetters: [],\r\n      results: [],\r\n      unknownLetters: alphabet\r\n        .split(\"\")\r\n        .reduce((a, b) => ({ ...a, [b]: [] }), {}),\r\n    };\r\n  }\r\n\r\n  addGuess = () => {\r\n    var results = main(this.state);\r\n    this.setState({ ...this.state, results });\r\n  };\r\n\r\n  keyUp = (event) => {\r\n    if (\r\n      event.key === \"Delete\" ||\r\n      event.key === \"Backspace\" ||\r\n      event.key === \"ArrowLeft\"\r\n    ) {\r\n      if (event.target.previousSibling !== null) {\r\n        event.target.previousSibling.focus();\r\n      }\r\n    } else if (\r\n      event.target.nextSibling !== null &&\r\n      ((event.keyCode >= 65 && event.keyCode <= 90) ||\r\n        event.key === \"ArrowRight\")\r\n    ) {\r\n      event.target.nextSibling.focus();\r\n    }\r\n\r\n    if (event.key === \"Enter\") {\r\n      this.addGuess();\r\n    }\r\n  };\r\n\r\n  keyDown = (index, event) => {\r\n    if (event.keyCode >= 65 && event.keyCode <= 90) {\r\n      if (event.target.value) {\r\n        event.target.value = event.nativeEvent.key;\r\n      }\r\n\r\n      var letters = this.state.letters;\r\n      letters[index] = event.nativeEvent.key;\r\n      this.setState({ ...this.state, letters });\r\n      console.log(this.state.letters);\r\n    } else if (event.key === \"Delete\" || event.key === \"Backspace\") {\r\n      var letters = this.state.letters;\r\n      letters[index] = \"\";\r\n      this.setState({ ...this.state, letters });\r\n    }\r\n  };\r\n\r\n  toggleLetter = (x) => {\r\n    var excludedLetters = this.state.excludedLetters;\r\n    if (excludedLetters.includes(x)) {\r\n      excludedLetters.splice(excludedLetters.indexOf(x), 1);\r\n    } else {\r\n      excludedLetters.push(x);\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      excludedLetters,\r\n    });\r\n  };\r\n\r\n  showCheatText = (e) => {\r\n    e.target.innerText = \"Cheat\";\r\n  };\r\n\r\n  hideCheatText = (e) => {\r\n    e.target.innerText = \"Help!\";\r\n  };\r\n\r\n  setUnknownLetters = (letter, positions) => {\r\n    let { unknownLetters } = this.state;\r\n    unknownLetters[letter] = positions;\r\n    this.setState({\r\n      ...this.state,\r\n      unknownLetters,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const letterButtons = alphabet\r\n      .split(\"\")\r\n      .map((x) => (\r\n        <LetterButton\r\n          letter={x}\r\n          active={false}\r\n          toggleLetter={this.toggleLetter}\r\n          key={`LetterButton-${x}`}\r\n        ></LetterButton>\r\n      ));\r\n\r\n    const unknownLetters = alphabet\r\n      .split(\"\")\r\n      .map((x) => (\r\n        <UnknownLetter\r\n          letter={x}\r\n          active={false}\r\n          toggleLetter={this.toggleLetter}\r\n          key={`LetterButton-${x}`}\r\n          setUnknownLetters={this.setUnknownLetters}\r\n        ></UnknownLetter>\r\n      ));\r\n\r\n    return (\r\n      <div style={{ marginBottom: \"50px\" }}>\r\n        <p className=\"title\">Wordle \"Helper\"</p>\r\n        <a href=\"https://github.com/victoriousj/\">\r\n          <code>by victor d johnson</code>\r\n        </a>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <button\r\n            className=\"submit\"\r\n            onClick={this.addGuess}\r\n            onMouseOver={this.showCheatText}\r\n            onMouseLeave={this.hideCheatText}\r\n          >\r\n            Help!\r\n          </button>\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            letters you know their placement\r\n          </div>\r\n          <input\r\n            onKeyUp={this.keyUp}\r\n            onKeyDown={(e) => this.keyDown(0, e)}\r\n            type=\"text\"\r\n            maxLength={1}\r\n            pattern=\"[A-Za-z]\"\r\n          />\r\n          <input\r\n            onKeyUp={this.keyUp}\r\n            onKeyDown={(e) => this.keyDown(1, e)}\r\n            type=\"text\"\r\n            maxLength={1}\r\n          />\r\n          <input\r\n            onKeyUp={this.keyUp}\r\n            onKeyDown={(e) => this.keyDown(2, e)}\r\n            type=\"text\"\r\n            maxLength={1}\r\n          />\r\n          <input\r\n            onKeyUp={this.keyUp}\r\n            onKeyDown={(e) => this.keyDown(3, e)}\r\n            type=\"text\"\r\n            maxLength={1}\r\n          />\r\n          <input\r\n            onKeyUp={this.keyUp}\r\n            onKeyDown={(e) => this.keyDown(4, e)}\r\n            type=\"text\"\r\n            maxLength={1}\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            letters that are not included\r\n          </div>\r\n\r\n          {letterButtons}\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            letters with unknown positions - check where letters are NOT located\r\n          </div>\r\n          {unknownLetters}\r\n        </div>\r\n\r\n        {this.state.results.length > 0 && (\r\n          <div\r\n            style={{\r\n              border: \"1px solid white\",\r\n              padding: \"10px 20px\",\r\n              marginTop: \"20px\",\r\n              borderRadius: \"5px\",\r\n            }}\r\n          >\r\n            <div style={{ fontSize: \"2em\" }}>Results</div>\r\n            <div\r\n              style={{ marginTop: \"20px\" }}\r\n              className={`${\r\n                this.state.results.length === 1 ? \"answer\" : \"\"\r\n              } results`}\r\n            >\r\n              {this.state.results.join(\", \")}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}